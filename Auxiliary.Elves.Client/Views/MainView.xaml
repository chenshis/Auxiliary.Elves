<hc:Window
    x:Class="Auxiliary.Elves.Client.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:Auxiliary.Elves.Client.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vc ="clr-namespace:Auxiliary.Elves.Client.Converters"
    Title="辅助精灵"
    Width="600"
    Height="600"
    prism:ViewModelLocator.AutoWireViewModel="True"
    FontFamily="Microsoft YaHei"
    FontWeight="ExtraLight"
    Foreground="#333"
    WindowStartupLocation="CenterScreen"
    SnapsToDevicePixels="True" 
    UseLayoutRounding="True"
    mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefault}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="TableButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="5,2"/>
            <Setter Property="Padding" Value="10,2"/>
        </Style>

        <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource TableButtonStyle}">
            <Setter Property="Background" Value="{DynamicResource DangerBrush}"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <!-- Boolean到Visibility的转换器 -->
        <BooleanToVisibilityConverter x:Key="Boolean2VisibilityConverter"/>

        <!-- 反转的Boolean到Visibility的转换器 -->
        <vc:InverseBooleanToVisibilityConverter x:Key="InverseBoolean2VisibilityConverter"/>

        <!-- 数据模板用于显示账号项 -->
        <DataTemplate x:Key="AccountItemTemplate">
            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1" Padding="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{Binding AccountId}" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding BindAccount}" Grid.Column="1" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding ExpireTime}" Grid.Column="2" VerticalAlignment="Center"/>

                    <StackPanel Orientation="Horizontal" Grid.Column="3" VerticalAlignment="Center">
                        <hc:Badge Status="{Binding StatusBadgeType}" Content="{Binding Status}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Column="4" HorizontalAlignment="Center">
                        <Button Content="停止" Style="{StaticResource TableButtonStyle}" 
                                Command="{Binding DataContext.StopCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding}"/>
                        <Button Content="删除" Style="{StaticResource DangerButtonStyle}" 
                                Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome NonClientFrameEdges="None" UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>

    <Grid Margin="1">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- 公告区域 -->
        <Border Grid.Row="0" CornerRadius="3">
            <hc:RunningBlock Content="这里是滚动公告。。。这里是滚动公告。。。这里是滚动公告。" 
                             Speed="50" Margin="10,5"/>
        </Border>
        <!-- 主内容区域 -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- 表格标题 -->
            <Border Grid.Row="0" Background="{DynamicResource RegionBrush}" Margin="10,10,10,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="帐号" Grid.Column="0" FontWeight="Bold" Margin="10,5"/>
                    <TextBlock Text="绑定帐号" Grid.Column="1" FontWeight="Bold" Margin="10,5"/>
                    <TextBlock Text="到期时间" Grid.Column="2" FontWeight="Bold" Margin="10,5"/>
                    <TextBlock Text="状态" Grid.Column="3" FontWeight="Bold" Margin="10,5"/>
                    <TextBlock Text="操作" Grid.Column="4" FontWeight="Bold" Margin="10,5"/>
                </Grid>
            </Border>

            <!-- 数据列表或空状态 -->
            <Border Grid.Row="1" Margin="10,0,10,10" BorderThickness="1" 
                    BorderBrush="{DynamicResource BorderBrush}" CornerRadius="0,0,5,5">
                <Grid>
                    <!-- 有数据时显示列表 -->
                    <ListView x:Name="AccountsListView" 
                         ItemsSource="{Binding Accounts}"
                         ItemTemplate="{StaticResource AccountItemTemplate}"
                         Visibility="{Binding HasData, Converter={StaticResource Boolean2VisibilityConverter}}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         BorderThickness="0">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemBaseStyle}">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <!-- 无数据时显示提示 -->
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                            Visibility="{Binding HasData, Converter={StaticResource InverseBoolean2VisibilityConverter}}">
                        <TextBlock Text="暂无数据" 
                               HorizontalAlignment="Center"
                               Foreground="{DynamicResource TextBrushSecondary}"
                               Margin="10"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <!-- 底部按钮区域 -->
        <Border Grid.Row="2" Background="{DynamicResource RegionBrush}" Padding="10">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="一键排列" Style="{StaticResource ButtonWarning}"
                        Command="{Binding ArrangeKeysCommand}" Margin="15,0"/>
                <Button Content="添加账号" Style="{StaticResource ButtonPrimary}"
                        Command="{Binding AddAccountCommand}"/>
            </StackPanel>
        </Border>
    </Grid>
</hc:Window>
