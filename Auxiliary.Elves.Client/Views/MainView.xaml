<hc:Window
    x:Class="Auxiliary.Elves.Client.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:Auxiliary.Elves.Client.Views"
    xmlns:i ="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vc ="clr-namespace:Auxiliary.Elves.Client.Converters"
    Title="辅助精灵"
    Width="600"
    Height="600"
    prism:ViewModelLocator.AutoWireViewModel="True"
    FontFamily="Microsoft YaHei"
    FontWeight="ExtraLight"
    Foreground="#333"
    WindowStartupLocation="CenterScreen"
    SnapsToDevicePixels="True" 
    UseLayoutRounding="True"
    Icon="../Assets/logo.ico"
    hc:Growl.GrowlParent="True"
    mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBaseStyle}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,10"/>
        </Style>
        <!-- Boolean到Visibility的转换器 -->
        <BooleanToVisibilityConverter x:Key="Boolean2VisibilityConverter"/>

        <!-- 反转的Boolean到Visibility的转换器 -->
        <vc:InverseBooleanToVisibilityConverter x:Key="InverseBoolean2VisibilityConverter"/>


    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome NonClientFrameEdges="None" UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>
    <i:Interaction.Triggers>
        <!-- 窗口关闭事件 -->
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}" 
                                 PassEventArgsToCommand="True"/>
        </i:EventTrigger>

        <!-- 窗口关闭后事件 -->
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding WindowClosedCommand}" 
                                 PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="1">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <!-- 公告区域 -->
        <Border Grid.Row="0" CornerRadius="3">
            <hc:RunningBlock Content="{Binding Announcement}" 
                             Speed="50" Margin="10,5" FontWeight="Bold"/>
        </Border>
        <!-- 主内容区域 -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- 表格标题 -->
            <Border Grid.Row="0" Background="{DynamicResource RegionBrush}" Margin="10,10,10,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="帐号" Grid.Column="0" FontWeight="Bold" />
                    <TextBlock Text="绑定帐号" Grid.Column="1" FontWeight="Bold"/>
                    <TextBlock Text="到期时间" Grid.Column="2" FontWeight="Bold" />
                    <TextBlock Text="状态" Grid.Column="3" FontWeight="Bold" />
                    <TextBlock Text="操作" Grid.Column="4" FontWeight="Bold" />
                </Grid>
            </Border>

            <!-- 数据列表或空状态 -->
            <Border Grid.Row="1" Margin="10,0,10,10" BorderThickness="1" 
                    BorderBrush="{DynamicResource BorderBrush}" CornerRadius="0,0,5,5">
                <Grid>
                    <ItemsControl ItemsSource="{Binding Accounts}" Visibility="{Binding HasData, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <ItemsControl.Resources>
                            <Style x:Key="tbItem" TargetType="TextBlock">
                                <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </ItemsControl.Resources>
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1" Margin="0,3">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="3*"/>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="3*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="{Binding AccountId}" Grid.Column="0" Style="{StaticResource tbItem}"/>
                                        <TextBlock Text="{Binding BindAccount}" Grid.Column="1" Style="{StaticResource tbItem}"/>
                                        <TextBlock Text="{Binding ExpireTime}" Grid.Column="2" Style="{StaticResource tbItem}"/>
                                        <TextBlock  Grid.Column="3">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource tbItem}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}" Value="True">
                                                            <Setter Property="Text" Value="运行中"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status}" Value="false">
                                                            <Setter Property="Text" Value="未运行"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <StackPanel Orientation="Horizontal" Grid.Column="4" HorizontalAlignment="Center">
                                            <Button Command="{Binding DataContext.ToggleCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonDanger}">
                                                        <Setter Property="Margin" Value="0,0,10,0"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="True">
                                                                <Setter Property="Content" Value="停止"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="false">
                                                                <Setter Property="Content" Value="启动"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button Content="删除" Style="{StaticResource ButtonPrimary}" 
                                                    Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- 无数据时显示提示 -->
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                            Visibility="{Binding HasData, Converter={StaticResource InverseBoolean2VisibilityConverter}}">
                        <TextBlock Text="暂无数据" 
                               HorizontalAlignment="Center"
                               Foreground="{DynamicResource TextBrushSecondary}"
                               Margin="10"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <!-- 底部按钮区域 -->
        <Border Grid.Row="2" Background="{DynamicResource RegionBrush}" Padding="10">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="一键排列" Style="{StaticResource ButtonWarning}"
                        Command="{Binding ArrangeKeysCommand}" Margin="15,0"/>
                <Button Content="添加账号" Style="{StaticResource ButtonPrimary}"
                        Command="{Binding AddAccountCommand}"/>
            </StackPanel>
        </Border>
    </Grid>
</hc:Window>
